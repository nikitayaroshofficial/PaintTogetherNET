<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAQEgQAAEABACoCwAAFgAAACgAAABAAAAAkAAAAAEABAAAAAAAQAsAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAgICAAMDAwAAAAP8AAP8AAAD//wD/AAAA/wD/AP//
        AAD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACPgA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACP/4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        CP8P+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACP9wD/gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAACP9wAA/4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACP9wALAP+AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAACP9wADuwD/gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACP8ATACzAA/4AAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAH/3DMxAAKAP9wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB/9wxAACqgD3AAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAf/cACQCiB/cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH/3CZkQB/9wAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAB/9wCQB/iHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcDMzMPAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADi7uDDwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADu7u7
        swAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADu4uLi7MwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD
        u4eLAAuwAAAAAAAAAAAAAAAAAAAAAAAAAAszDwML8Du4eLBwgLAAAAAAAAAAAAAAAAAAAAAAAAAAO7u7
        u7u7u4uHgHcAsAAAAAAAAAAAAAAAAAAAAAAAAAOzMzMzMzM4uHiwd3AAAAAAAAAAAAAAAAAAAAAAAAAA
        Azu7u7u7u4O7h4sAC4MAAAAAAAAAAAAAAAAAAAAAAAAAMzMzMzMzM/u4uLi/MwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAP7uLi/MwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD////MwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAzMzMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHiIiIiIiIiIiI
        iIiIiIcAAAAAAAAAAAAAAAAAAAAAAAf/////////////////+HAAAAAAAAAAAAAAAAAAAAAAAH9wdwdw
        dwdwdwdwdwd3hwAAAAiIAAAAAAAAAAAAAAAAB/cPcPcPcPcPcPcPcPd4cAAAiIiAAAAAAAAAAAAAAAAA
        f3D3D3D3D3D3D3D3D3eHAAiIiIgAAAAAAAAAAAAAAAAH9w9w9w9w9w9w9w9w93gAiIiIiIAAAAAAAAAA
        AAAAAAB/iIiIiIiIiIiIiIiIdwiIiIiI8AAAAAAAAAAAAAAAAH+Id4iIiIiIiIh4iIhwiIiIiI9wAAAA
        AAAAAAAAAAAAf4iqiIiIiAAAAAAAiAiIiIiI93AAAAAAAAAAAAAAAAB/iIiIiIiId3d3d3eAiIiIiI93
        cAAAAAAAAAAAAAAAAH+IiIiIiIiIiIiIiA+IiIiI93dwAAAAAAAAAAAAAAAAf///////////////CPiI
        iI93d3AAAAAAAAAAAAAAAAAHd3d3d3d3d3d3d3cIj4iI93d3cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACI+I93dwhwAAAAAAAAAAAAAAAAAAd3d3d3d3d3d3d3D/CP93dwh3AAAAAAAAAAAAAAAAAAB/iIiIiI
        iIiIiID4gIh3cAh3cAAAAAAAAAAAAAAAAAAH+P//////////D4gIiHcIh3cAAAAAAAAAAAAAAAAAAAf4
        BERERERERED4gAiIdwh3cAAAAAAAAAAAAAAAAAAAB/gMzMzMzMzMD4gHCIh3B3cAAAAAAAAAAAAAAAAA
        AAAH+AzMzMzMzMD4gHcAiHd3cAAAAAAAAAAAAAAAAAAAAAf4DMzMzMzMD/gIdwd4d3cAAAAAAAAAAAAA
        AAAAAAAAB/gMzMzMzMwPgPh3Bwh3cAAAAAAAAAAAAAAAAAAAAAAH+AzMzMzMzA+A+HcACHcAAAAAAAAA
        AAAAAAAAAAAAAAf4DMzMzMzMD3f4dwAAAAAAAAAAAAAAAAAAAAAAAAAAB/gMzMzMzMzAdPh3AAAAAAAA
        AAAAAAAAAAAAAAAAAAAH+AzszMzMzMzE+HcAAAAAAAAAAAAAAAAAAAAAAAAAAAf4DOzMzMzMzMT4dwAA
        AAAAAAAAAAAAAAAAAAAAAAAAB/gMzMzMzMzMxPh3AAAAAAAAAAAAAAAAAAAAAAAAAAAH+AAAAAAAAAAA
        +HcAAAAAAAAAAAAAAAAAAAAAAAAAAAf4d3d3d3d3d3f4dwAAAAAAAAAAAAAAAAAAAAAAAAAAB/iIiIiI
        iIiIiIh3AAAAAAAAAAAAAAAAAAAAAAAAAAAAf////////////3cAAAAAAAAAAAAAAAAAAAAAAAAAAAAH
        iIiIiIiIiIiI9wAAAAAAAAAAAAAAAAAAAAAAAAAAAAB3d3d3d3d3d3d3AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////////////////////////////////////f///
        //////4//////////B/////////4D/////////AH////////4AP////////AAf///////4AA////////
        AAB///////4AAD///////wAAP///////gAA////////AAD///////+AAP///////8AA////////4AH//
        //////gBP///////8AHf///////gAN/////+bkAA3/////wAAADf////+AAAAL/////4AAAAf/////gA
        AAD//////AAAAP////////AB////////+AP////////8B///////////////////////////////////
        ////////////////////////wAAAAf////+AAAAA/////4AAAAB+P///wAAAADwf///gAAAAGA////AA
        AAAQB///+AAAAAAD///8AAAAAAP///wAAAAAA////AAAAAAD///8AAAAAAP///wAAAAAA////AAAAAAD
        ///+AAAAAAP///+AAAAAA////4AAAAAD////gAAAAAP///+AAAAAB////4AAAAAP////gAAAAB////+A
        AAAAP////4AAAAB/////gAAAAP////+AAAAB/////4AAACP/////gAAAf/////+AAAB//////4AAAH//
        ////gAAAf/////+AAAB//////4AAAH//////gAAAf//////AAAB//////+AAAH//////8AAA////////
        ////////
</value>
  </data>
</root>